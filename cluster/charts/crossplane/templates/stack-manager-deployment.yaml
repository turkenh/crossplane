{{- if not .Values.onlyTypesAndRoles }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "name" . }}-stack-manager
  labels:
    app: {{ template "name" . }}-stack-manager
    chart: {{ template "chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ template "name" . }}-stack-manager
      release: {{ .Release.Name }}
  strategy:
    type: {{ .Values.deploymentStrategy }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}-stack-manager
        release: {{ .Release.Name }}
    spec:
      {{- if not .Values.tenantConfig }}
      serviceAccountName: stack-manager
      {{- end }}
      containers:
      - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        args:
        - stack
        - manage
        {{- range $arg := .Values.args }}
        - {{ $arg }}
        {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Chart.Name }}
        resources:
          limits:
            cpu: 100m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        env:
          # The pod name to pass with the downward API
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          # The pod namespace to pass with the downward API
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        {{- if .Values.tenantConfig }}
          - name: KUBERNETES_SERVICE_HOST
            value: {{ .Values.tenantConfig.kubernetesServiceHost | quote }}
          - name: KUBERNETES_SERVICE_PORT
            value: {{ .Values.tenantConfig.kubernetesServicePort | quote }}
          - name: HOST_KUBECONFIG
            value: /var/run/secrets/host/config
        volumeMounts:
          - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            name: sa-token
            readOnly: true
          - mountPath: /var/run/secrets/host
            name: host-config
            readOnly: true
        automountServiceAccountToken: false
        serviceAccount: ""
        serviceAccountName: ""
        volumes:
          - name: sa-token
            secret:
              defaultMode: 420
              secretName: {{ .Values.tenantConfig.stackManagerSATokenSecret | quote }}
          - name: host-config
            secret:
              defaultMode: 420
              secretName: {{ .Values.tenantConfig.hostKubeconfigSecret | quote }}
        {{- end }}
{{- end }}