---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: registryconfigs.pkg.crossplane.io
spec:
  group: pkg.crossplane.io
  names:
    kind: RegistryConfig
    listKind: RegistryConfigList
    plural: registryconfigs
    singular: registryconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.match.prefix
      name: PREFIX
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A RegistryConfig configures a registry for use by the package
          manager.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RegistryConfigSpec defines the desired state of RegistryConfig.
            properties:
              credentials:
                description: Credentials are the credentials to use when accessing
                  this registry.
                properties:
                  pullSecretRef:
                    description: |-
                      PullSecretRef is a reference to a secret of type kubernetes.io/dockerconfigjson
                      that contains the credentials to use when accessing this registry.
                    properties:
                      name:
                        description: Name of the secret.
                        type: string
                    required:
                    - name
                    type: object
                required:
                - pullSecretRef
                type: object
              match:
                description: Match is a list of matchers that determine if this registry
                  should be used.
                properties:
                  prefix:
                    description: |-
                      A prefix of the user-specified image name, i.e. using one of the
                      following formats:
                        - host[:port]
                       - host[:port]/namespace[/namespace…]
                       - host[:port]/namespace[/namespace…]/repo
                       - host[:port]/namespace[/namespace…]/repo(:tag|@digest)
                       - [*.]host
                      We are following the same format as registries.conf for prefix, see https://www.mankier.com/5/containers-registries.conf
                    type: string
                required:
                - prefix
                type: object
              verification:
                description: Signing contains the configuration for image signing.
                properties:
                  cosign:
                    description: Cosign contains the configuration for cosign verification.
                    properties:
                      authorities:
                        description: |-
                          TODO: Define types here, do not import from sigstore
                          Authorities defines the rules for discovering and validating signatures.
                        items:
                          description: |-
                            The authorities block defines the rules for discovering and
                            validating signatures.  Signatures are
                            cryptographically verified using one of the "key" or "keyless"
                            fields.
                            When multiple authorities are specified, any of them may be used
                            to source the valid signature we are looking for to admit an
                            image.
                          properties:
                            attestations:
                              description: |-
                                Attestations is a list of individual attestations for this authority,
                                once the signature for this authority has been verified.
                              items:
                                description: |-
                                  Attestation defines the type of attestation to validate and optionally
                                  apply a policy decision to it. Authority block is used to verify the
                                  specified attestation types, and if Policy is specified, then it's applied
                                  only after the validation of the Attestation signature has been verified.
                                properties:
                                  name:
                                    description: |-
                                      Name of the attestation. These can then be referenced at the CIP level
                                      policy.
                                    type: string
                                  policy:
                                    description: |-
                                      Policy defines all of the matching signatures, and all of
                                      the matching attestations (whose attestations are verified).
                                    properties:
                                      configMapRef:
                                        description: ConfigMapRef defines the reference
                                          to a configMap with the policy definition.
                                        properties:
                                          key:
                                            description: Key defines the key to pull
                                              from the configmap.
                                            type: string
                                          name:
                                            description: Name is unique within a namespace
                                              to reference a configmap resource.
                                            type: string
                                          namespace:
                                            description: Namespace defines the space
                                              within which the configmap name must
                                              be unique.
                                            type: string
                                        type: object
                                      data:
                                        description: Data contains the policy definition.
                                        type: string
                                      fetchConfigFile:
                                        description: |-
                                          FetchConfigFile controls whether ConfigFile will be fetched and made
                                          available for CIP level policy evaluation. Note that this only gets
                                          evaluated (and hence fetched) iff at least one authority matches.
                                          The ConfigFile will then be available in this format:
                                          https://github.com/opencontainers/image-spec/blob/main/config.md
                                        type: boolean
                                      includeObjectMeta:
                                        description: |-
                                          IncludeObjectMeta controls whether the ObjectMeta will be included and
                                          made available for CIP level policy evalutation. Note that this only gets
                                          evaluated iff at least one authority matches.
                                        type: boolean
                                      includeSpec:
                                        description: |-
                                          IncludeSpec controls whether resource `Spec` will be included and
                                          made available for CIP level policy evaluation. Note that this only gets
                                          evaluated iff at least one authority matches.
                                          Also note that because Spec may be of a different shape depending
                                          on the resource being evaluatied (see MatchResource for filtering)
                                          you might want to configure these to match the policy file to ensure
                                          the shape of the Spec is what you expect when evaling the policy.
                                        type: boolean
                                      includeTypeMeta:
                                        description: |-
                                          IncludeTypeMeta controls whether the TypeMeta will be included and
                                          made available for CIP level policy evalutation. Note that this only gets
                                          evaluated iff at least one authority matches.
                                        type: boolean
                                      remote:
                                        description: Remote defines the url to a policy.
                                        properties:
                                          sha256sum:
                                            description: Sha256sum defines the exact
                                              sha256sum computed out of the 'body'
                                              of the http response.
                                            type: string
                                          url:
                                            description: URL to the policy data.
                                            type: string
                                        type: object
                                      type:
                                        description: |-
                                          Which kind of policy this is, currently only rego or cue are supported.
                                          Furthermore, only cue is tested :)
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  predicateType:
                                    description: PredicateType defines which predicate
                                      type to verify. Matches cosign verify-attestation
                                      options.
                                    type: string
                                required:
                                - name
                                - predicateType
                                type: object
                              type: array
                            ctlog:
                              description: CTLog sets the configuration to verify
                                the authority against a Rekor instance.
                              properties:
                                trustRootRef:
                                  description: Use the Public Key from the referred
                                    TrustRoot.TLog
                                  type: string
                                url:
                                  description: URL sets the url to the rekor instance
                                    (by default the public rekor.sigstore.dev)
                                  type: string
                              type: object
                            key:
                              description: Key defines the type of key to validate
                                the image.
                              properties:
                                data:
                                  description: Data contains the inline public key.
                                  type: string
                                hashAlgorithm:
                                  description: HashAlgorithm always defaults to sha256
                                    if the algorithm hasn't been explicitly set
                                  type: string
                                kms:
                                  description: |-
                                    KMS contains the KMS url of the public key
                                    Supported formats differ based on the KMS system used.
                                  type: string
                                secretRef:
                                  description: SecretRef sets a reference to a secret
                                    with the key.
                                  properties:
                                    name:
                                      description: name is unique within a namespace
                                        to reference a secret resource.
                                      type: string
                                    namespace:
                                      description: namespace defines the space within
                                        which the secret name must be unique.
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                            keyless:
                              description: Keyless sets the configuration to verify
                                the authority against a Fulcio instance.
                              properties:
                                ca-cert:
                                  description: CACert sets a reference to CA certificate
                                  properties:
                                    data:
                                      description: Data contains the inline public
                                        key.
                                      type: string
                                    hashAlgorithm:
                                      description: HashAlgorithm always defaults to
                                        sha256 if the algorithm hasn't been explicitly
                                        set
                                      type: string
                                    kms:
                                      description: |-
                                        KMS contains the KMS url of the public key
                                        Supported formats differ based on the KMS system used.
                                      type: string
                                    secretRef:
                                      description: SecretRef sets a reference to a
                                        secret with the key.
                                      properties:
                                        name:
                                          description: name is unique within a namespace
                                            to reference a secret resource.
                                          type: string
                                        namespace:
                                          description: namespace defines the space
                                            within which the secret name must be unique.
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                identities:
                                  description: Identities sets a list of identities.
                                  items:
                                    description: |-
                                      Identity may contain the issuer and/or the subject found in the transparency
                                      log.
                                      Issuer/Subject uses a strict match, while IssuerRegExp and SubjectRegExp
                                      apply a regexp for matching.
                                    properties:
                                      issuer:
                                        description: Issuer defines the issuer for
                                          this identity.
                                        type: string
                                      issuerRegExp:
                                        description: IssuerRegExp specifies a regular
                                          expression to match the issuer for this
                                          identity.
                                        type: string
                                      subject:
                                        description: Subject defines the subject for
                                          this identity.
                                        type: string
                                      subjectRegExp:
                                        description: SubjectRegExp specifies a regular
                                          expression to match the subject for this
                                          identity.
                                        type: string
                                    type: object
                                  type: array
                                insecureIgnoreSCT:
                                  description: InsecureIgnoreSCT omits verifying if
                                    a certificate contains an embedded SCT
                                  type: boolean
                                trustRootRef:
                                  description: Use the Certificate Chain from the
                                    referred TrustRoot.CertificateAuthorities and
                                    TrustRoot.CTLog
                                  type: string
                                url:
                                  description: URL defines a url to the keyless instance.
                                  type: string
                              required:
                              - identities
                              type: object
                            name:
                              description: |-
                                Name is the name for this authority. Used by the CIP Policy
                                validator to be able to reference matching signature or attestation
                                verifications.
                                If not specified, the name will be authority-<index in array>
                              type: string
                            rfc3161timestamp:
                              description: RFC3161Timestamp sets the configuration
                                to verify the signature timestamp against a RFC3161
                                time-stamping instance.
                              properties:
                                trustRootRef:
                                  description: Use the Certificate Chain from the
                                    referred TrustRoot.TimeStampAuthorities
                                  type: string
                              type: object
                            source:
                              description: Sources sets the configuration to specify
                                the sources from where to consume the signatures.
                              items:
                                description: Source specifies the location of the
                                  signature / attestations.
                                properties:
                                  oci:
                                    description: OCI defines the registry from where
                                      to pull the signature / attestations.
                                    type: string
                                  signaturePullSecrets:
                                    description: |-
                                      SignaturePullSecrets is an optional list of references to secrets in the
                                      same namespace as the deploying resource for pulling any of the signatures
                                      used by this Source.
                                    items:
                                      description: |-
                                        LocalObjectReference contains enough information to let you locate the
                                        referenced object inside the same namespace.
                                      properties:
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            TODO: Add other useful fields. apiVersion, kind, uid?
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    type: array
                                  tagPrefix:
                                    description: |-
                                      TagPrefix is an optional prefix that signature and attestations have.
                                      This is the 'tag based discovery' and in the future once references are
                                      fully supported that should likely be the preferred way to handle these.
                                    type: string
                                type: object
                              type: array
                            static:
                              description: |-
                                Static specifies that signatures / attestations are not validated but
                                instead a static policy is applied against matching images.
                              properties:
                                action:
                                  description: Action defines how to handle a matching
                                    policy.
                                  type: string
                                message:
                                  description: For fail actions, emit an optional
                                    custom message
                                  type: string
                              required:
                              - action
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                    type: object
                  provider:
                    type: string
                required:
                - provider
                type: object
            required:
            - match
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
